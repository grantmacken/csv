#!/usr/bin/env bash
source .env
IPAddress=$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $CONTAINER)
URL="http://${IPAddress}:8080/exist/rest/db"
SRC="content/${NAME}.xqm"
BASENAME=$( basename $SRC)
nsname=http://${NS_DOMAIN}/#${NAME}
importNS=$(grep -oP '^module namespace(.+);$' $SRC)
# copy the test file into container
docker cp $SRC ${CONTAINER}:/tmp
# echo $importNS
function post() {
curl  -s \
  -H 'Content-Type: application/xml' \
  -u 'admin:' \
  --data-binary @- "$URL"
}

function awkward() {
awk '
 /^INFO/  {printf("\033[32m%s\033[0m\t%s\t%s %s %s\n",$1,$2,$3,$4,$5);next}
 /^WARN/  {printf("\033[91m%s\033[0m\t%s\t%s %s %s\n",$1,$2,$3,$4,$5);next}
{print}'
"$@"
} 

cat <<EOF | post | awkward
<query xmlns='http://exist.sourceforge.net/NS/exist' start='1' max='99' wrap='no'>
<text><![CDATA[
xquery version '3.1';
import $importNS
import module namespace inspect = "http://exist-db.org/xquery/inspection";
declare default element namespace "http://exist-db.org/xquery/profiling";
try {
  let \$nl := "&#10;"
  let \$tab := '&#9;'
  let \$modFuncs := inspect:module-functions-by-uri(xs:anyURI('$nsname') )
return (
 ' - functions in $NAME module:  '  || xs:string(count(\$modFuncs)) ,\$nl,
  for \$func in \$modFuncs
  let \$name := inspect:inspect-function(\$func)/@name/string()
  return 
    if (system:trace()//function[@name = (\$name) ])
    then ( string-join(( 
         'INFO:', \$name,'call count',
         system:trace()//function[@name = (\$name) ][1]/@calls,
           \$nl),\$tab ) ) 
    else ( string-join(('WARN:',\$name,'was not called',\$nl),\$tab ) )
)} catch * {
      'Error:${SRC}:' || \$err:code || ': '  || \$err:description || '&#10;'
}
]]></text>
</query>
EOF
